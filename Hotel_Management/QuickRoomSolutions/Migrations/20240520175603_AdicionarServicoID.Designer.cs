// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuickRoomSolutions.DataBase;

#nullable disable

namespace QuickRoomSolutions.Migrations
{
    [DbContext(typeof(QuickRoomSolutionDatabaseContext))]
    [Migration("20240520175603_AdicionarServicoID")]
    partial class AdicionarServicoID
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QuickRoomSolutions.Models.Cargo", b =>
                {
                    b.Property<int>("CargoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CargoId"));

                    b.Property<string>("DescricaoCargo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("CargoId")
                        .HasName("PK__Cargo__B4E665CDEED8E657");

                    b.ToTable("Cargo", (string)null);
                });

            modelBuilder.Entity("QuickRoomSolutions.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteId"));

                    b.Property<string>("ClientPassword")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("PessoaNif")
                        .HasColumnType("int")
                        .HasColumnName("PessoaNIF");

                    b.HasKey("ClienteId")
                        .HasName("PK__Cliente__71ABD087D82EA67A");

                    b.HasIndex("PessoaNif")
                        .IsUnique();

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("QuickRoomSolutions.Models.Fornecedor", b =>
                {
                    b.Property<int>("FornecedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FornecedorId"));

                    b.Property<bool>("FornecedorAtivo")
                        .HasColumnType("bit");

                    b.Property<string>("FornecedorEmail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FornecedorMorada")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("FornecedorNipc")
                        .HasColumnType("int")
                        .HasColumnName("FornecedorNIPC");

                    b.Property<string>("FornecedorNome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("FornecedorId")
                        .HasName("PK__Forneced__494B8C10371A8538");

                    b.ToTable("Fornecedor", (string)null);
                });

            modelBuilder.Entity("QuickRoomSolutions.Models.Funcionario", b =>
                {
                    b.Property<int>("FuncionarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FuncionarioId"));

                    b.Property<int>("CargoCargoId")
                        .HasColumnType("int");

                    b.Property<string>("FuncionarioPassword")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("Nif")
                        .HasColumnType("int")
                        .HasColumnName("NIF");

                    b.HasKey("FuncionarioId")
                        .HasName("PK__Funciona__297ECCAA3C870B15");

                    b.HasIndex("CargoCargoId");

                    b.HasIndex("Nif")
                        .IsUnique();

                    b.ToTable("Funcionario", (string)null);
                });

            modelBuilder.Entity("QuickRoomSolutions.Models.FuncionarioFornecedor", b =>
                {
                    b.Property<int>("FuncFornecedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FuncFornecedorId"));

                    b.Property<int>("FornecedorFornecedorId")
                        .HasColumnType("int");

                    b.Property<string>("FuncFornecedorPassword")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("PessoaNif")
                        .HasColumnType("int")
                        .HasColumnName("PessoaNIF");

                    b.HasKey("FuncFornecedorId")
                        .HasName("PK__Funciona__DE2495F54369F4D4");

                    b.HasIndex("FornecedorFornecedorId");

                    b.HasIndex("PessoaNif")
                        .IsUnique();

                    b.ToTable("FuncionarioFornecedor", (string)null);
                });

            modelBuilder.Entity("QuickRoomSolutions.Models.Orcamento", b =>
                {
                    b.Property<int>("OrcamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrcamentoId"));

                    b.Property<string>("DescricacaoOrcamento")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("FornecedorFornecedorId")
                        .HasColumnType("int");

                    b.Property<string>("OrcamentoEstado")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<byte[]>("OrcamentoFile")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("TicketTicketId")
                        .HasColumnType("int");

                    b.Property<float>("ValorOrcamento")
                        .HasColumnType("real");

                    b.HasKey("OrcamentoId")
                        .HasName("PK__Orcament__4E96F7795B2C316B");

                    b.HasIndex("FornecedorFornecedorId");

                    b.HasIndex("TicketTicketId");

                    b.ToTable("Orcamento", (string)null);
                });

            modelBuilder.Entity("QuickRoomSolutions.Models.Pessoa", b =>
                {
                    b.Property<int>("Nif")
                        .HasColumnType("int")
                        .HasColumnName("NIF");

                    b.Property<int>("ContactoTelefonico")
                        .HasColumnType("int");

                    b.Property<string>("Cp")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("CP");

                    b.Property<DateTime>("DataNasc")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Morada")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Nif")
                        .HasName("PK__Pessoa__C7DEC3317E9C9F41");

                    b.HasIndex(new[] { "Nif" }, "UQ__Pessoa__C7DEC33027126182")
                        .IsUnique();

                    b.ToTable("Pessoa", (string)null);
                });

            modelBuilder.Entity("QuickRoomSolutions.Models.Quarto", b =>
                {
                    b.Property<string>("QuartoId")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Bloco")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Piso")
                        .HasColumnType("int");

                    b.Property<int>("Porta")
                        .HasColumnType("int");

                    b.Property<string>("QuartoEstado")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("TipologiaTipologiaId")
                        .HasColumnType("int");

                    b.HasKey("QuartoId")
                        .HasName("PK__Quarto__903445333972E660");

                    b.HasIndex("TipologiaTipologiaId");

                    b.ToTable("Quarto", (string)null);
                });

            modelBuilder.Entity("QuickRoomSolutions.Models.Reserva", b =>
                {
                    b.Property<int>("ReservaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservaId"));

                    b.Property<bool>("CheckIn")
                        .HasColumnType("bit");

                    b.Property<bool>("CheckOut")
                        .HasColumnType("bit");

                    b.Property<int>("ClienteClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataCheckIn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataCheckOut")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime");

                    b.Property<string>("EstadoReserva")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<long>("NumeroCartao")
                        .HasColumnType("bigint");

                    b.Property<string>("QuartoQuartoId")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("TipologiaId")
                        .HasColumnType("int");

                    b.HasKey("ReservaId")
                        .HasName("PK__Reserva__C39937634EF16361");

                    b.HasIndex("ClienteClienteId");

                    b.HasIndex("QuartoQuartoId");

                    b.HasIndex("TipologiaId");

                    b.ToTable("Reserva", (string)null);
                });

            modelBuilder.Entity("QuickRoomSolutions.Models.Servico", b =>
                {
                    b.Property<int>("ServicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServicoId"));

                    b.Property<string>("ServicoTipo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("ServicoId")
                        .HasName("PK__Servicos__C59767B6FC5CF0A1");

                    b.ToTable("Servicos");
                });

            modelBuilder.Entity("QuickRoomSolutions.Models.Ticket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketId"));

                    b.Property<int?>("FuncionarioFornecedorFuncFornecedorId")
                        .HasColumnType("int");

                    b.Property<int>("FuncionarioFuncionarioId")
                        .HasColumnType("int");

                    b.Property<string>("QuartoQuartoId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("ServicoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TickectDataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("TicketDataAbertura")
                        .HasColumnType("datetime");

                    b.Property<string>("TicketDescricao")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("TicketEstado")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("TicketId")
                        .HasName("PK__Ticket__712CC6076586CA3E");

                    b.HasIndex("FuncionarioFornecedorFuncFornecedorId");

                    b.HasIndex("FuncionarioFuncionarioId");

                    b.HasIndex("QuartoQuartoId");

                    b.HasIndex("ServicoId");

                    b.ToTable("Ticket", (string)null);
                });

            modelBuilder.Entity("QuickRoomSolutions.Models.TicketLimpeza", b =>
                {
                    b.Property<int>("LimpezaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LimpezaId"));

                    b.Property<int?>("FuncionarioFuncionarioId")
                        .HasColumnType("int");

                    b.Property<int?>("FuncionarioLimpezaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LimpezaDataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("LimpezaDataCriacao")
                        .HasColumnType("datetime");

                    b.Property<string>("LimpezaEstado")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("LimpezaPrioridade")
                        .HasColumnType("int");

                    b.Property<string>("QuartoQuartoId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("LimpezaId")
                        .HasName("PK__RegistoL__15039A162BB27612");

                    b.HasIndex("FuncionarioFuncionarioId");

                    b.HasIndex("FuncionarioLimpezaId");

                    b.HasIndex("QuartoQuartoId");

                    b.ToTable("TicketLimpeza", (string)null);
                });

            modelBuilder.Entity("QuickRoomSolutions.Models.Tipologia", b =>
                {
                    b.Property<int>("TipologiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipologiaId"));

                    b.Property<float>("Preco")
                        .HasColumnType("real");

                    b.Property<string>("TipologiaDescricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<byte[]>("TipologiaImage")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("TipologiaId")
                        .HasName("PK__Tipologi__62F8D35E25BE44C9");

                    b.ToTable("Tipologia");
                });

            modelBuilder.Entity("ServicosFornecedor", b =>
                {
                    b.Property<int>("FornecedorFornecedorId")
                        .HasColumnType("int");

                    b.Property<int>("ServicosServicoId")
                        .HasColumnType("int");

                    b.HasKey("FornecedorFornecedorId", "ServicosServicoId")
                        .HasName("PK__Servicos__87388612C1D67A14");

                    b.HasIndex("ServicosServicoId");

                    b.ToTable("ServicosFornecedor", (string)null);
                });

            modelBuilder.Entity("QuickRoomSolutions.Models.Cliente", b =>
                {
                    b.HasOne("QuickRoomSolutions.Models.Pessoa", "PessoaPessoa")
                        .WithOne("ClienteCliente")
                        .HasForeignKey("QuickRoomSolutions.Models.Cliente", "PessoaNif")
                        .IsRequired()
                        .HasConstraintName("FKCliente785426");

                    b.Navigation("PessoaPessoa");
                });

            modelBuilder.Entity("QuickRoomSolutions.Models.Funcionario", b =>
                {
                    b.HasOne("QuickRoomSolutions.Models.Cargo", "CargoCargo")
                        .WithMany("Funcionarios")
                        .HasForeignKey("CargoCargoId")
                        .IsRequired()
                        .HasConstraintName("FKFuncionari942921");

                    b.HasOne("QuickRoomSolutions.Models.Pessoa", "PessoaPessoa")
                        .WithOne("FuncionarioFuncionario")
                        .HasForeignKey("QuickRoomSolutions.Models.Funcionario", "Nif")
                        .IsRequired()
                        .HasConstraintName("FKFuncionari583978");

                    b.Navigation("CargoCargo");

                    b.Navigation("PessoaPessoa");
                });

            modelBuilder.Entity("QuickRoomSolutions.Models.FuncionarioFornecedor", b =>
                {
                    b.HasOne("QuickRoomSolutions.Models.Fornecedor", "FornecedorFornecedor")
                        .WithMany("FuncionarioFornecedors")
                        .HasForeignKey("FornecedorFornecedorId")
                        .IsRequired()
                        .HasConstraintName("FKFuncionari357614");

                    b.HasOne("QuickRoomSolutions.Models.Pessoa", "PessoaPessoa")
                        .WithOne("FuncionarioFornecedorFuncionarioFornecedor")
                        .HasForeignKey("QuickRoomSolutions.Models.FuncionarioFornecedor", "PessoaNif")
                        .IsRequired()
                        .HasConstraintName("FKFuncionari252582");

                    b.Navigation("FornecedorFornecedor");

                    b.Navigation("PessoaPessoa");
                });

            modelBuilder.Entity("QuickRoomSolutions.Models.Orcamento", b =>
                {
                    b.HasOne("QuickRoomSolutions.Models.Fornecedor", "FornecedorFornecedor")
                        .WithMany("Orcamentos")
                        .HasForeignKey("FornecedorFornecedorId")
                        .IsRequired()
                        .HasConstraintName("FKOrcamento670984");

                    b.HasOne("QuickRoomSolutions.Models.Ticket", "TicketTicket")
                        .WithMany("Orcamentos")
                        .HasForeignKey("TicketTicketId")
                        .IsRequired()
                        .HasConstraintName("FKOrcamento101725");

                    b.Navigation("FornecedorFornecedor");

                    b.Navigation("TicketTicket");
                });

            modelBuilder.Entity("QuickRoomSolutions.Models.Quarto", b =>
                {
                    b.HasOne("QuickRoomSolutions.Models.Tipologia", "TipologiaTipologia")
                        .WithMany("Quartos")
                        .HasForeignKey("TipologiaTipologiaId")
                        .IsRequired()
                        .HasConstraintName("FKQuarto389558");

                    b.Navigation("TipologiaTipologia");
                });

            modelBuilder.Entity("QuickRoomSolutions.Models.Reserva", b =>
                {
                    b.HasOne("QuickRoomSolutions.Models.Cliente", "ClienteCliente")
                        .WithMany("Reservas")
                        .HasForeignKey("ClienteClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FKReserva817646");

                    b.HasOne("QuickRoomSolutions.Models.Quarto", "QuartoQuarto")
                        .WithMany("Reservas")
                        .HasForeignKey("QuartoQuartoId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FKReserva851797");

                    b.HasOne("QuickRoomSolutions.Models.Tipologia", "TipologiaTipologia")
                        .WithMany("Reservas")
                        .HasForeignKey("TipologiaId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("ClienteCliente");

                    b.Navigation("QuartoQuarto");

                    b.Navigation("TipologiaTipologia");
                });

            modelBuilder.Entity("QuickRoomSolutions.Models.Ticket", b =>
                {
                    b.HasOne("QuickRoomSolutions.Models.FuncionarioFornecedor", "FuncionarioFornecedor")
                        .WithMany("Tickets")
                        .HasForeignKey("FuncionarioFornecedorFuncFornecedorId");

                    b.HasOne("QuickRoomSolutions.Models.Funcionario", "FuncionarioFuncionario")
                        .WithMany("Tickets")
                        .HasForeignKey("FuncionarioFuncionarioId")
                        .IsRequired()
                        .HasConstraintName("FKTicket380775");

                    b.HasOne("QuickRoomSolutions.Models.Quarto", "QuartoQuarto")
                        .WithMany("Tickets")
                        .HasForeignKey("QuartoQuartoId")
                        .IsRequired()
                        .HasConstraintName("FKTicket996136");

                    b.HasOne("QuickRoomSolutions.Models.Servico", "ServicoServico")
                        .WithMany("Tickets")
                        .HasForeignKey("ServicoId")
                        .IsRequired();

                    b.Navigation("FuncionarioFornecedor");

                    b.Navigation("FuncionarioFuncionario");

                    b.Navigation("QuartoQuarto");

                    b.Navigation("ServicoServico");
                });

            modelBuilder.Entity("QuickRoomSolutions.Models.TicketLimpeza", b =>
                {
                    b.HasOne("QuickRoomSolutions.Models.Funcionario", "FuncionarioFuncionario")
                        .WithMany("TicketsLimpezaRececionista")
                        .HasForeignKey("FuncionarioFuncionarioId")
                        .HasConstraintName("FKRegistoLim395939");

                    b.HasOne("QuickRoomSolutions.Models.Funcionario", "FuncionarioLimpeza")
                        .WithMany("TicketsLimpezaAuxLimpeza")
                        .HasForeignKey("FuncionarioLimpezaId");

                    b.HasOne("QuickRoomSolutions.Models.Quarto", "QuartoQuarto")
                        .WithMany("TicketsLimpeza")
                        .HasForeignKey("QuartoQuartoId")
                        .IsRequired()
                        .HasConstraintName("FKRegistoLim780577");

                    b.Navigation("FuncionarioFuncionario");

                    b.Navigation("FuncionarioLimpeza");

                    b.Navigation("QuartoQuarto");
                });

            modelBuilder.Entity("ServicosFornecedor", b =>
                {
                    b.HasOne("QuickRoomSolutions.Models.Fornecedor", null)
                        .WithMany()
                        .HasForeignKey("FornecedorFornecedorId")
                        .IsRequired()
                        .HasConstraintName("FKServicosFo466425");

                    b.HasOne("QuickRoomSolutions.Models.Servico", null)
                        .WithMany()
                        .HasForeignKey("ServicosServicoId")
                        .IsRequired()
                        .HasConstraintName("FKServicosFo3255");
                });

            modelBuilder.Entity("QuickRoomSolutions.Models.Cargo", b =>
                {
                    b.Navigation("Funcionarios");
                });

            modelBuilder.Entity("QuickRoomSolutions.Models.Cliente", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("QuickRoomSolutions.Models.Fornecedor", b =>
                {
                    b.Navigation("FuncionarioFornecedors");

                    b.Navigation("Orcamentos");
                });

            modelBuilder.Entity("QuickRoomSolutions.Models.Funcionario", b =>
                {
                    b.Navigation("Tickets");

                    b.Navigation("TicketsLimpezaAuxLimpeza");

                    b.Navigation("TicketsLimpezaRececionista");
                });

            modelBuilder.Entity("QuickRoomSolutions.Models.FuncionarioFornecedor", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("QuickRoomSolutions.Models.Pessoa", b =>
                {
                    b.Navigation("ClienteCliente");

                    b.Navigation("FuncionarioFornecedorFuncionarioFornecedor");

                    b.Navigation("FuncionarioFuncionario");
                });

            modelBuilder.Entity("QuickRoomSolutions.Models.Quarto", b =>
                {
                    b.Navigation("Reservas");

                    b.Navigation("Tickets");

                    b.Navigation("TicketsLimpeza");
                });

            modelBuilder.Entity("QuickRoomSolutions.Models.Servico", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("QuickRoomSolutions.Models.Ticket", b =>
                {
                    b.Navigation("Orcamentos");
                });

            modelBuilder.Entity("QuickRoomSolutions.Models.Tipologia", b =>
                {
                    b.Navigation("Quartos");

                    b.Navigation("Reservas");
                });
#pragma warning restore 612, 618
        }
    }
}
